---
//Import Main Components
import ItemsHeader from "@components/Items-header.astro";
//Import Icons
import SunIcon from "@components/icons/Sun-icon.astro";
import SunFillIcon from "@components/icons/SunFill-icon.astro";
---

<header class="flex flex-row justify-center h-16 items-center sticky top-0 z-10 transition-filter duration-300 ease-in-out">
  <!-- items -->
  <div class="flex flex-row items-center gap-4 text-sm max-w-fit bg-gray-100 bg-opacity-40 rounded-3xl py-2 px-6 fixed backdrop-blur-lg border-none dark:bg-gray-900 dark:bg-opacity-60 dark:text-gray-200">
    <ItemsHeader>
      <a href="#projects" class="header-link">Projects</a>
    </ItemsHeader>
    <ItemsHeader>
      <a href="#skills" class="header-link">Skills</a>
    </ItemsHeader>
    <ItemsHeader>
      <a href="#aboutme" class="header-link">About Me</a>
    </ItemsHeader>
    <ItemsHeader>
      <button id="themeToggle" class="flex items-center justify-center">
        <div id="moon"><SunFillIcon /></div> <!-- moon is the sun with a fill -->
        <div id="sun" style="display: none;"><SunIcon /></div>
      </button>
    </ItemsHeader>
  </div>
</header>

<!-- Script for Section Navigation -->
<script>
  document.addEventListener('astro:page-load', () => {
  const links = document.querySelectorAll('.header-link');

  links.forEach(link => {
    link.addEventListener('click', (event) => {
      event.preventDefault();
      
      const target = event.target as HTMLElement;
      const targetId = (target.getAttribute('href') || '').substring(1);
      const currentUrl = window.location.pathname;

      // Debugging
      console.log(`Clicked link with href: ${target.getAttribute('href')}`);
      console.log(`Target ID: ${targetId}`);

      if (currentUrl === '/' || currentUrl === '/projects-all') {
        const targetElement = document.getElementById(targetId);

        if (targetElement) {
          targetElement.scrollIntoView({ behavior: 'smooth' });
        } else {
          console.log('Section not found, redirecting to index');
          window.location.href = `/#${targetId}`;
        }
      } else {
        console.log('Redirecting to index');
        window.location.href = `/#${targetId}`;
      }
    });
  });
});
</script>


<!-- Script to toggle the theme -->
<script>
  document.addEventListener('astro:page-load', () => {
    // get the theme from localStorage or the users system preference
    const theme = (() => {
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme');
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
      }
      return 'light';
    })();

    // apply the initial theme
    document.documentElement.setAttribute('data-theme', theme);

    // show the correct icon based on the initial theme
    updateIcon(theme);

    // store the theme in localStorage
    window.localStorage.setItem('theme', theme);

    // handle the click event to toggle the theme
    const handleToggleClick = () => {
      const element = document.documentElement;
      const currentTheme = element.getAttribute('data-theme');
      const newTheme = currentTheme === "dark" ? "light" : "dark";

      element.setAttribute('data-theme', newTheme);
      localStorage.setItem("theme", newTheme);

      // update the icon based on the new theme
      updateIcon(newTheme);
    }

    document.getElementById("themeToggle").addEventListener("click", handleToggleClick);

    function updateIcon(theme) {
      const moonIcon = document.getElementById('moon');
      const sunIcon = document.getElementById('sun');

      if (theme === 'dark') {
        moonIcon.style.display = 'block';
        sunIcon.style.display = 'none';
      } else {
        moonIcon.style.display = 'none';
        sunIcon.style.display = 'block';
      }
    }
  });
</script>

<!-- Script to apply the correct theme after page swap -->
<script>
  document.addEventListener('astro:after-swap', () => {
    // ensure the correct theme class is added or removed after page swap
    localStorage.theme === 'dark'
    ? document.documentElement.classList.add("dark")
    : document.documentElement.classList.remove("dark");
  });
</script>
